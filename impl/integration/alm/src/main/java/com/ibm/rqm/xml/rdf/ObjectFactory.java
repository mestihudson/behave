//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.13 at 12:00:05 PM BRT 
//


package com.ibm.rqm.xml.rdf;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.ibm.rqm.xml.rdf package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Description_QNAME = new QName("http://www.w3.org/1999/02/22-rdf-syntax-ns#", "Description");
    private final static QName _Type_QNAME = new QName("http://www.w3.org/1999/02/22-rdf-syntax-ns#", "type");
    private final static QName _PropertyElt_QNAME = new QName("http://www.w3.org/1999/02/22-rdf-syntax-ns#", "propertyElt");
    private final static QName _TypedNode_QNAME = new QName("http://www.w3.org/1999/02/22-rdf-syntax-ns#", "typedNode");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.ibm.rqm.xml.rdf
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RDF }
     * 
     */
    public RDF createRDF() {
        return new RDF();
    }

    /**
     * Create an instance of {@link PropertyEltType }
     * 
     */
    public PropertyEltType createPropertyEltType() {
        return new PropertyEltType();
    }

    /**
     * Create an instance of {@link TypedNodeType }
     * 
     */
    public TypedNodeType createTypedNodeType() {
        return new TypedNodeType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TypedNodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", name = "Description", substitutionHeadNamespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", substitutionHeadName = "typedNode")
    public JAXBElement<TypedNodeType> createDescription(TypedNodeType value) {
        return new JAXBElement<TypedNodeType>(_Description_QNAME, TypedNodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PropertyEltType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", name = "type", substitutionHeadNamespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", substitutionHeadName = "propertyElt")
    public JAXBElement<PropertyEltType> createType(PropertyEltType value) {
        return new JAXBElement<PropertyEltType>(_Type_QNAME, PropertyEltType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PropertyEltType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", name = "propertyElt")
    public JAXBElement<PropertyEltType> createPropertyElt(PropertyEltType value) {
        return new JAXBElement<PropertyEltType>(_PropertyElt_QNAME, PropertyEltType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TypedNodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/1999/02/22-rdf-syntax-ns#", name = "typedNode")
    public JAXBElement<TypedNodeType> createTypedNode(TypedNodeType value) {
        return new JAXBElement<TypedNodeType>(_TypedNode_QNAME, TypedNodeType.class, null, value);
    }

}
