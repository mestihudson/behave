<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="behave-execucao">

	<title>Execução de Testes</title>
	<para>
		Este capítulo apresenta recursos avançados para execução de
		testes com o Demoiselle Behave, que
		podem auxiliar a montagem de um
		ambiente para execução de testes funcionais.
	</para>
	
	<section>
		<title>Execução com Ghost Driver (Funcionalidade Experimental)</title>
		<para>Ghost Driver é um WebDriver remoto que usa PhantomJS como back-end. É uma implementação JavaScript do Protocolo do WebDriver para PhantomJS
		a fim de rodar testes headless em Selenium.</para>
		<para>Para ativá-lo informe o driver <citetitle>GhostDriver</citetitle> nas propriedades do dbehave (behave.properties):</para>
		<programlisting>behave.runner.screen.type=GhostDriver</programlisting>
		<para>Também é necessário informar o local do binário do <citetitle>PhantmJS</citetitle> na propriedade behave.runner.screen.driverPath:</para>
		<programlisting>behave.runner.screen.driverPath=/usr/lib/node_modules/phantomjs/lib/phantom/bin/phantomjs</programlisting>
		<para>Outro caminho possível é:</para>
		<programlisting>behave.runner.screen.driverPath=/usr/local/bin/phantomjs</programlisting>		
		<tip>
			<para>O Phantomjs pode ser instalado pelo comando <citetitle>sudo npm install -g phantomjs.</citetitle></para>
		</tip>
	</section>
	
	<section>
		<title>Execução Paralela</title>
		<para>
			A execução de testes de forma paralela pode ser uma alternativa
			para reduzir o
			tempo de execução das baterias. Neste caso observe que
			esta abordagem
			aumenta a
			necessidade de processamento da máquina de
			ativação dos testes. Além disso se deve
			garantir a independência entre
			os testes para evitar falsos positivos.
		</para>
		<para>
			O Demoiselle Behave recomenda a utilização do maven-surefire-plugin que
			gerencia a execução do teste conforme os seguintes parâmetros:
		</para>
		<itemizedlist>
			<listitem>
				<citetitle>forkCount</citetitle>
				: Determina o número máximo de threads que deverão ser
				paralelizadas;
			</listitem>
			<listitem>
				<citetitle>threadCount</citetitle>
				: Número máximo de threads por jvm;
			</listitem>
			<listitem>
				<citetitle>reuseForks=false</citetitle>
				: Garante a execução das threads em JVMs isoladas.
				Esta configuração
				evita que dados utilizados por uma thread sejam
				afetados por outras.
			</listitem>
			<listitem>
				<citetitle>parallel=classes</citetitle>
				: Define a estratégia de paralelização. Neste caso,
				cada classe de
				teste do JUnit será instanciada por uma thread até
				atingir o número
				máximo de threads (forkCount).
				É recomendado utilizar
				o nível de
				classe, pois havendo a necessidade de
				dependência entre os
				testes,
				esta pode ser realizada dentro da classe JUnit.
			</listitem>
		</itemizedlist>
		<para>
			Segue abaixo o exemplo para configuração do plugin no arquivo
			pom.xml do projeto:
		</para>
		<programlisting>&lt;build&gt;
	&lt;plugins&gt;
		&lt;plugin&gt;
			&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
			&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
			&lt;version&gt;2.16&lt;/version&gt;
			&lt;configuration&gt;
				&lt;forkCount&gt;3&lt;/forkCount&gt;
				&lt;threadCount&gt;1&lt;/threadCount&gt;
				&lt;reuseForks&gt;false&lt;/reuseForks&gt;
				&lt;parallel&gt;classes&lt;/parallel&gt;
			&lt;/configuration&gt;
		&lt;/plugin&gt;
	&lt;/plugins&gt;
&lt;/build&gt; </programlisting>
		<para>
			Para executar seu teste de forma paralela acione o menu “Run as →
			Maven
			Test”
			do eclipse ou no terminal execute “mvn test”.
		</para>
	</section>

	<section>
		<title>Modo Background</title>
		<para>
			A execução de testes em modo background é um recurso importante
			quando se deseja criar um ambiente
			dedicado para execução de testes.
			Normalmente estes ambientes não possuem
			interface gráfica que
			impedem o
			acionamento de navegadores.
		</para>
		<para>
			Outra situação comum acontece quando o testador executa os
			testes em sua estação de trabalho e
			necessita utilizar outros
			programas que concorrerão com sua tela, devido a
			utilização de
			navegadores.
		</para>
		<para>
			Para ambientes Linux, que possuem ferramentas para emulação de
			tela, o Demoiselle Behave recomenda
			a utilização da ferramenta Xvfb.
		</para>
		<para>
			Instalação:
		</para>

		<programlisting>apt-get install xvfb</programlisting>

		<para>
			Execução do Xvfb:
		</para>

		<programlisting>Xvfb :2 -screen 0 1024x768x24</programlisting>

		<para>
			É possível instanciar vários processos Xvfb por meio de
			identificadores diferentes.
			No exemplo acima foi definido com o
			identificador “2”.
		</para>

		<para>
			Para executar um aplicativo que utiliza a interface gráfica
			acione o comando DISPLAY:
		</para>

		<programlisting>DISPLAY=:2 firefox</programlisting>

		<para>
			Para rodar um teste no Xvfb, basta rodar:
		</para>

		<programlisting>DISPLAY=:2 mvn test</programlisting>

		<para>
			Para visualizar processos rodando no Xvfb use o x11vnc (apt-get
			install x11vnc)
			que instanciará o serviço vnc para um identificador
			Xvfb específico:
		</para>
		<programlisting>x11vnc -display :2</programlisting>
	</section>

	<section>
		<title>Integração Contínua</title>
		<para>
			Para execução de testes funcionais em modo background, sob um ambiente
			de integração contínua é necessária a instalação de plugins que
			permitam gerenciar o
			Xvfb. O Jenkins possui o
			plugin:
			<ulink url="https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin">https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin
			</ulink>
			que permite realizar este controle.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-01.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-01.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Xvfb Plugin</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Após instalar o plugin configure-o pelo menu “Gerenciar o
			Jenkins → Configurar o sistema” na seção
			Xvfb installation, informe um
			nome “padrão” e a pasta em que o executável do Xvfb foi instalado
			“/usr/bin”.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-02.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-02.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Configuração do Sistema</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Para cada projeto Jenkins configure na seção “Ambiente de
			Construção” a
			instalação, seu timeout, as dimensões da tela e seu
			display:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-03.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-03.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Configuração do Projeto</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Ao executar seu projeto, o Jenkins iniciará o Xvfb antes da
			construção da build
			e finalizará o processo ao final da build:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/ic-04.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<imageobject role="html">
					<imagedata fileref="images/ic-04.png" align="center"
						format="PNG" scalefit="1" width="75%" />
				</imageobject>
				<caption>
					<para>Console</para>
				</caption>
			</mediaobject>
		</para>
	</section>
	
	
	<section>
		<title>Testes Remotos</title>
		<para>
			A execução de testes remotos, na qual o navegador rodará numa estação diferente da 
			estação originadora dos testes, é realizada por meio do Selenium Server. Este roteiro 
			auxilia a criação rápida deste ambiente.
		</para>

		<para>
			<citetitle>Instalação do Selenium Server</citetitle>
			<itemizedlist>
				<listitem>
					<citetitle>Download</citetitle>: Obtenha o Selenium Server no site <ulink url="http://code.google.com/p/selenium/">
					http://code.google.com/p/selenium/
					</ulink> ou direto na área de donwload do DBehave <ulink url="https://www.dropbox.com/s/o1bo9gb8b6dqv1e/selenium-server-standalone-2.37.0.jar">selenium-server-standalone-2.37.0.jar</ulink>.
					Recomendamos a versão 2.37.0 ou superior.
				</listitem>
				<listitem>
					<citetitle>Iniciar Serviço</citetitle>: Rode o Selenium Server na estação que executará o navegador:
					<programlisting>java -jar selenium-server-standalone-2.37.0.jar</programlisting> 
				</listitem>				
			</itemizedlist>						
		</para>
		<para>
			<citetitle>Configuração do Projeto</citetitle>
			<itemizedlist>
				<listitem>
					<citetitle>demoiselle.properties</citetitle>: Abra o arquivo demoiselle.properties do seu projeto
					e configure as seguintes propriedades:					
<programlisting>
//Altera o driver para o modo remoto
behave.runner.screen.type=RemoteWeb

//informa o navegador. Opções disponíveis: firefox, chrome, internetExplorer, safari, htmlUnit
behave.runner.screen.remote.name=firefox

//informa a url na qual encontra-se o Selenium Server
behave.runner.screen.remote.url=http://127.0.0.1:4444/wd/hub
</programlisting>
				</listitem>	
				<listitem>
					<citetitle>Navegadores</citetitle>: Caso necessite executar seu teste em um navegador diferente do Firefox, além de
					configurar a propriedade “behave.runner.screen.remote.name”, inicie o Selenium Server
					informando o caminho do driver específico ao seu navegador:					
					<programlisting>java -jar selenium-server-standalone-2.37.0.jar -Dwebdriver.chrome.driver=/path/chromedriver</programlisting> 
				</listitem>								
			</itemizedlist>						
		</para>
	</section>

	<section>
		<title>Relatórios JBehave</title>
		<para>
			Ao final da execução dos testes automatizados são gerados
			relatórios na pasta <citetitle>target/jbehave/view</citetitle>. 
			O arquivo principal é o index.html, passível de abertura com qualquer
			navegador. Ao abrir o arquivo deve-se clicar em "Story Reports" para ter acesso
			ao relatório da execução.
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/relatorio-1.png" align="center"
						format="PNG" scalefit="1" width="80%" />
				</imageobject>
				<caption>
					<para>Relatório Geral da Execução</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Para acessar os detalhes de cada história existe um link na
			última coluna (view), na direita da tabela, como mostra a imagem abaixo:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/relatorio-2.png" align="center"
						format="PNG" scalefit="1" width="80%" />
				</imageobject>
				<caption>
					<para>Link para detalhes da história</para>
				</caption>
			</mediaobject>
		</para>
		<para>
			Após clicar no link "html" da tela de visão geral, a seguinte tela será exibida:
		</para>
		<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/relatorio-3.png" align="center"
						format="PNG" scalefit="1" width="80%" />
				</imageobject>
				<caption>
					<para>Detalhamento da História</para>
				</caption>
			</mediaobject>
		</para>
		<para>
		 	Na tela acima é apresentado o detalhamento dos cenários contidos na história.
		</para>
				<para>
			<mediaobject>
				<imageobject role="fo">
					<imagedata fileref="images/relatorio-4.png" align="center"
						format="PNG" scalefit="1" width="80%" />
				</imageobject>
				<caption>
					<para>Cenário com Erro (Desktop)</para>
				</caption>
			</mediaobject>
		</para>
		<para>
		 	Caso algum erro venha a ocorrer, este será apresentado junto com um print screen da tela (Desktop e Web).
		</para>
	</section>

</chapter>
