<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" []>
<chapter id="desktop">

	<title>Testando aplicações Desktop</title>
	<para>
		O Framework Demoiselle Behave possui um Runner específico para
		testes
		de aplicações Desktop (Swing). Neste capítulo este assunto será
		abordado.
	</para>
	<section>
		<title>Iniciando um projeto utilizando o Arquétipo (Modelo de Projeto)
		</title>
		<para>
			Na criação do projeto é possível selecionar o arquétipo
			<emphasis>jbehave-fest-archetype</emphasis>
			para ter um início rápido de um projeto para automação de testes
			Desktop (Swing).
		</para>
	</section>
	<section>
		<title>Iniciando um projeto utilizando um projeto existente (Projeto
			WebDriver)</title>
		<para>
			Para transformar um projeto existente em um projeto de testes
			funcionais Desktop basta alterar o runner e fazer as configurações
			necessárias.

			Alterar a dependência do runner.

			<programlisting><![CDATA[<dependency>
	<groupId>br.gov.frameworkdemoiselle.component.behave</groupId>
	<artifactId>demoiselle-behave-runner-fest</artifactId>
	<version>1.x.x</version>
	<scope>test</scope>
</dependency>]]></programlisting>
		</para>
	</section>

	<section>
		<title>Configurações Desktop</title>
		<para>
			Todas as configurações já citadas anteriormente e que são pertinentes
			ao Desktop também podem ser utilizadas. Abaixo estão as configurações
			específicas para Desktop:

			<itemizedlist>
				<listitem>
					Adicionar o projeto no
					<emphasis>classpath</emphasis>
					do projeto de testes;
				</listitem>
				<listitem>
					Adicionar a configuração
					<emphasis>behave.runner.app.mainClass</emphasis>
					nas propriedades apontando para a class que inicia o projeto
					Desktop.
				</listitem>
			</itemizedlist>
		</para>
	</section>

	<section>
		<title>Mapeamentos</title>
		<para>
			O runner Desktop utiliza 3 tipos de localizadores, conforme abaixo:
						
			<itemizedlist>
				<listitem>
					<citetitle>Label:</citetitle> Seleciona o objeto de tela que possua o text visível;
				</listitem>
				<listitem>
					<citetitle>Name:</citetitle> Seleciona o objeto de tela que tenha o identificador selecionado pelo desenvolvedor;
				</listitem>
				<listitem>
					<citetitle>ClassName:</citetitle> Seleciona o objeto de tela que tenha a classe definida (JPanel, JButton...).  
				</listitem>
			</itemizedlist>
			
			Adicionalmente a estes localizadores é possível selecionar o índice que o objeto está utilizando, tal como a anotação @ElementIndex, no exemplo a seguir:
			
			<programlisting>@ElementMap(name = "Nome do Elemento na História", locatorType = ElementLocatorType.ClassName, locator = "JTextField")
<citetitle>@ElementIndex(index = 1)</citetitle>
private TextField atributo;</programlisting>

			Por padrão o índice do objeto é 0 (Zero).
		</para>
	</section>

</chapter>
