<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="behave-story">

	<title>Como criar uma história</title>
	<para>
		Neste capítulo estão descritos os termos, frases e regras para
		criação e reúso de cenários de teste realizáveis por meio do framework Behave.
	</para>

	<section>
		<title>Conceito</title>
		<para>
			No BDD, há três palavras-chave:
			<itemizedlist>
				<listitem>
					Dado
				</listitem>
				<listitem>
					Quando
				</listitem>
				<listitem>
					Então
				</listitem>
			</itemizedlist>
		</para>
		<para>
			O framework Behave estende o vocabulário padrão do BDD,
			adicionando
			novos termos:
			<itemizedlist>
				<listitem>
					E
				</listitem>
				<listitem>
					Mas
				</listitem>
			</itemizedlist>
		</para>
		<para>
			Um cenário é um conjunto de frases que utilizam as
			palavras-chave
			descritas acima para descrever um comportamento
			esperado pelo
			sistema.
		</para>
		<programlisting>Dado que estou na tela de login do sistema
Quando informo usuário "demoiselle" e senha "behave"
E clico no botão "Entrar"
Então será exibida a página de boas vindas</programlisting>
		<para>
			Uma história é um conjunto de cenários que descrevem uma
			funcionalidade do sistema, ou uma parte dela.
		</para>
	</section>

	<section>
		<title>Frases pré-definidas pelo framework</title>
		<para>
			O framework Behave foi construído para diminuir o esforço gasto
			para
			definir os vários cenários de teste de um sistema. Algumas
			frases
			estão embutidas no framework para facilitar o mapeamento
			das classes
			de teste. São elas:
			<itemizedlist>
				<listitem><para>[Dado que | Quando | Então] vou para a tela "&lt;título da tela&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] estou na tela "&lt;título da tela&gt;"</para></listitem>
				
				<listitem><para>[Quando | Então] clico em "&lt;nome do elemento&gt;" referente a "&lt;lista de parâmetros&gt;"</para></listitem>
				
				<listitem><para>[Quando | Então] clico em "&lt;texto do botão/link&gt;"</para></listitem>
				
				<listitem><para>[Quando | Então] seleciono a opção "&lt;texto da opção&gt;"</para></listitem>								
				
				<listitem><para>[Quando | Então] seleciono a opção de índice "&lt;indice&gt;" no campo "&lt;nome do elemento&gt;"</para></listitem>
				
				<listitem><para>[Quando | Então] seleciono a opção "&lt;nome do elemento&gt;" referente a "&lt;lista de parametros&gt;"</para></listitem>				
				
				<listitem><para>[Quando | Então] seleciono a opção de valor "&lt;valor&gt;" no campo "&lt;nome do elemento&gt;"</para></listitem>
								
				<listitem><para>[Dado que | Quando | Então] informo "&lt;valor&gt;" no campo "&lt;nome do campo&gt;"</para></listitem>
								
				<listitem><para>[Quando] limpo o valor do campo "&lt;nome do campo&gt;"</para></listitem>
								
				<listitem><para>[Quando] não informo valor para o campo "&lt;nome do campo&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando] informo "&lt;tabela de exemplos&gt;"</para></listitem>
				
				<listitem><para>[Quando] informo os campos "&lt;tabela de exemplos&gt;"</para></listitem>
				
				<listitem><para>[Então] será exibido "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Então] será exibido na "&lt;nome do elemento&gt;" o valor "&lt;valor&gt;"</para></listitem>
				
				<listitem><para>[Então] será exibido o valor "&lt;texto&gt;" em "&lt;nome do elemento&gt;" referente a "&lt;lista de parâmetros&gt;"</para></listitem>				
				
				<listitem><para>[Dado que | Quando | Então] "&lt;nome do elemento&gt;" não está visível</para></listitem>						
				
				<listitem><para>[Dado que | Quando | Então] obtenho "&lt;texto&gt;" do campo "&lt;nome do campo&gt;"</para></listitem>				
				
				<listitem><para>[Dado que | Quando | Então] informo "&lt;chave&gt;" com valor "&lt;nome do campo&gt;"</para></listitem>					
				
				<listitem><para>[Quando] movo o mouse sobre "&lt;elemento&gt;"</para></listitem>
				
				<listitem><para>[Quando] clico na linha da tabela "&lt;tabela&gt;" referente a "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] confirmo a caixa de diálogo</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] cancelo a caixa de diálogo</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] informo na caixa de diálogo "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Então] será exibido na caixa de diálogo "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] informo um número randomico com prefixo "&lt;texto do prefixo&gt;" no campo "&lt;nome do campo&gt;"</para></listitem>
				
				<listitem><para>[Quando] informo um número randomico no campo "&lt;nome do campo&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] defino a variável "&lt;nome da variável&gt;" com valor "&lt;texto&gt;"</para></listitem>
								
				<listitem><para>[Quando | Então] imprimo no console o valor da variável "&lt;nome da variável&gt;"</para></listitem>
				
				<listitem><para>[Quando] seleciono "&lt;registro do conjunto de dados&gt;" do conjunto de dados "nome do conunto de dados"</para></listitem>
				
				<listitem><para>[Então] não será exibido "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Então] não será exibido na "&lt;elemento&gt;" o valor "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Então] não será exibido no "&lt;elemento&gt;" o valor "&lt;texto&gt;"</para></listitem>
				
				<listitem><para>[Então] não será exibido o valor "&lt;texto&gt;" em "&lt;elemento&gt;" referente a "&lt;lista de parâmetros&gt;"</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] "&lt;elemento&gt;" referente a "&lt;lista de parâmetros&gt;" não está visível</para></listitem>
				
				<listitem><para>[Então] "&lt;elemento&gt;" está visível</para></listitem>
				
				<listitem><para>[Então] "&lt;elemento&gt;" está desabilitado</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] aguardo o elemento "&lt;elemento&gt;" referente a "&lt;lista de parâmetros&gt;" estar visível, clicável e habilitado</para></listitem>
				
				<listitem><para>[Dado que | Quando | Então] o elemento "&lt;elemento&gt;" referente a "&lt;lista de parâmetros&gt;" está visível e desabilitado</para></listitem>
															
			</itemizedlist>
		</para>
		<programlisting>Dado que estou na tela "Login"
Quando informo "demoiselle" no campo "Usuário:"
E informo "behave" no campo "Senha:" 
Quando clico em "Entrar"
Então será exibido "Seja bem vindo"</programlisting>
	</section>
	
		<section>
		<title>Frases pré-definidas pelo framework para manipulação de Grids</title>
		<para>		
			<itemizedlist>
				<listitem><para>[Quando] armazeno a célula "&lt;linha&gt;","&lt;coluna&gt;" da tabela "&lt;tabela&gt;" em "&lt;container&gt;</para></listitem>
				<listitem><para>[Quando] armazeno a coluna "&lt;coluna&gt;" da tabela "&lt;tabela&gt;" em "&lt;container&gt;"</para></listitem>
				<listitem><para>[Quando] comparo o texto da célula "&lt;linha&gt;","&lt;c&gt;" da tabela "&lt;tabela&gt;" com "&lt;container&gt;"</para></listitem>
				<listitem><para>[Quando] comparo o texto da coluna "&lt;coluna&gt;" da tabela "&lt;tabela&gt;" com "&lt;container&gt;"</para></listitem>
				<listitem><para>[Quando] clico na célula "&lt;linha&gt;","&lt;coluna&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
				<listitem><para>[Quando] clico na coluna "&lt;coluna&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
				<listitem><para>[Quando] escolho a opção "&lt;value&gt;" na célula "&lt;l&gt;","&lt;c&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
				<listitem><para>[Quando] escolho a opção "&lt;value&gt;" na coluna "&lt;c&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
				<listitem><para>[Quando] informo o texto "&lt;value&gt;" na célula "&lt;l&gt;","&lt;c&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
				<listitem><para>[Quando] informo o texto "&lt;value&gt;" na coluna "&lt;c&gt;" da tabela "&lt;tabela&gt;"</para></listitem>
			</itemizedlist>
		</para>
	</section>

	<section>
		<title>Escrevendo um cenário</title>
		<para>
			As histórias escritas para o Behave devem estar em arquivos com
			a
			extensão ".story".
			Cada arquivo ".story" pode conter vários cenários
			de teste.
			Esta extensão pode ser alterada modificando o valor da chave
			"behave.parser.story.extension.converted" no arquivo
			behave.properties.
			Os termos aceitos pelo framework devem sempre estar
			no início das frases, mesmo que precedidas por espaços.
			As frases
			descritas nos cenários devem estar cada uma em uma linha diferente.
			O
			cenário é, por padrão, iniciado com o termo "Cenário:", no caso da
			história estar no idioma português.
			Este termo pode ser alterado
			modificando o valor da chave
			"behave.parser.identification.scenario.pattern.&lt;idioma&gt;" no
			arquivo behave.properties.
		</para>
		<programlisting>Cenário: Acessar o sistema com usuário demoiselle e senha behave
Dado que estou na página "Login"
Quando informo "demoiselle" no campo "Usuário:"
E informo "behave" no campo "Senha:" 
Quando clico em "Entrar"
Então será exibido "Seja bem vindo"</programlisting>
	</section>

	<section>
		<title>Parametrizando os cenários</title>
		<para>
			Parâmetros devem ser utilizados nos cenários quando os dados
			utilizados nos testes não forem constantes. A sintaxe de um
			parâmetro
			é "{nome_do_parametro}".			
		</para>
		<programlisting>Cenário: Acessar o sistema com usuário "{usuario}" e senha "{senha}"
Dado que estou na página "Login"
Quando informo "{usuario}" no campo "Usuário:"
E informo "{senha}" no campo "Senha:" 
Quando clico em "Entrar"
Então será exibido "Seja bem vindo"</programlisting>
	</section>

	<section>
		<title>Reusando os cenários</title>
		<para>
			Para que o reúso ocorra é necessário, primeiramente, utilizar
			parâmetros no nome do cenário. Isto irá prevenir que o cenário
			seja
			"executado" pelo framework, mas, deste forma, ele poderá
			ser
			referenciado por outros cenários, diminuindo a quantidade
			de linhas
			escritas em todo o projeto de teste.
		</para>
		<programlisting>Cenário: Acessar o sistema com usuário "{usuario}" e senha "{senha}"
Dado que estou na página "Login"
Quando informo "{usuario}" no campo "Usuário:"
E informo "{senha}" no campo "Senha:" 
Quando clico em "Entrar"
Então será exibido "Seja bem vindo"

Cenário: Sair do sistema
Dado que vou para a página "Tela Principal"
Quando clico em "Sair"
Então será exibido "Usuário:"
E será exibido "Senha:"

Cenário: Teste com dados "{usuario}" e senha "{senha}"
Acessar o sistema com usuário "{usuario}" e senha "{senha}"
Sair do sistema</programlisting>
	</section>
	
	<section>
		<title>Reusando os cenários em outras histórias</title>
		<para>
			Para que o reúso de cenários ocorra em outras histórias é necessário, primeiramente,
			que a história seja adicionada no contexto do teste que será executado.
		</para>
		<programlisting>
BehaveContext eng = BehaveContext.getInstance();
		
// Adiciona histórias que serão executadas
eng.addStories("/stories/acesso.story");
eng.addStories("/stories/estou-com-sorte.story");
eng.addStories("/stories/pesquisa-simples.story");

// Roda as histórias incluída
eng.run();
  		</programlisting>
		<para>
			Assim a chamada ao cenário se dar através da utilização do título do cenário pretendido.
		</para>
		<programlisting>
Em /stories/acesso.story:

Cenário: Acesso ao "{sistema}"

Dado que vou para a tela "Tela de Busca"
Então será exibido "{sistema}"


Em /stories/estou-com-sorte.story:

Cenário: Utilização da funcionalidade estou com sorte

<emphasis>Acesso ao "Google"</emphasis>
Quando clico em "Estou com sorte"
Então será exibido "Google"
  		</programlisting>
		<para>
			Uma outra possibilidade seria adicionar a história somente para reúso. 
		</para>  		
		<programlisting>
BehaveContext eng = BehaveContext.getInstance();
		
// Adiciona história somente para reuso de cenários
// Cenários que não reutilizados não serão executados
eng.addStoriesReuse("/stories/acesso.story");

// Adiciona histórias que serão executadas
eng.addStories("/stories/estou-com-sorte.story");
eng.addStories("/stories/pesquisa-simples.story");

// Roda as histórias incluída
eng.run();
  		</programlisting> 
		<para>
			Desta maneira os cenários que não são parametrizados contidos nas histórias
			passadas no método "addStoriesReuse" não serão executados.
			Caso que não ocorre quando utilizado o método "addStories", onde todos os 
			cenários que não são parametrizados serão executados.
		</para>   		 		
	</section>
	
	<section>
		<title>Plugin do JBehave para Eclipse</title>
		<para>
			<citetitle>Funcionalidades:</citetitle>
			<itemizedlist>
				<listitem>
					Passos com coloração (Syntax highlighting)
				</listitem>
				<listitem>
					Link entre os passos escritos nas histórias e o método dentro do código Java					
				</listitem>
				<listitem>
					Auto completar nos passos criados no código java, inclusive os passos comuns
				</listitem>
				<listitem>
					Validação dos passos, detectando se existem passos não mapeados por exemplo
				</listitem>
			</itemizedlist>

			<citetitle>Requisitos:</citetitle>

			<para>
				O Plugin já foi testado nas versões Indigo (3.7) e Juno (4.2)
				do
				Eclipse.
			</para>

			<citetitle>Instalação usando o Eclipse:</citetitle>

			<itemizedlist>
				<listitem>
					1. Clique em Help > Install New Software...
				</listitem>
				<listitem>
					2. Adicione uma nova localização de site:
					http://jbehave.org/reference/eclipse/updates/
				</listitem>
				<listitem>
					3. Após adicionar a localização procure pelo plugin JBehave Eclipse e
					siga o procedimento padrão para instalação de plugins
				</listitem>
			</itemizedlist>

			<citetitle>Configuração:</citetitle>
			<itemizedlist>
				<listitem>
					Após a instalação acesse o menu do Eclipse, Window > Preferences >
					JBehave -> Project Settings e selecione em Story Language como pt.
				</listitem>
				<listitem>
					Com esta configuração será possível ver as histórias escritas em
					português com as marcações coloridas e o auto completar funcionará normalmente.
				</listitem>
			</itemizedlist>
		</para>
	</section>

</chapter>
